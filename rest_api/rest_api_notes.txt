API:
Application Programming Interface.
-> Application can used by the user using an Interface(endpoints).

REST:
REpresentational State Transfer.
-> Architectural style of the web.
-> A standard/ set of guidelines by which we can structure and create API's.
-> REST API's have identifiable properties.

REST properties:

They make use of HTTP methods.

    - GET -> Used to retrieve data from the server.

    - POST -> Used to send data to the server.

    - PUT -> Used to update data.

    - DELETE -> Used to delete data.

They make use of HTTP Status codes.

    Examples:

        - 200 means OK.
        - 400 means resource not found.
        - 500 means server error.

res.end(); => It is used to stop the process there.

res.send(); => It is used to send the anything to the web page.


Middleware: The code that runs in between the Request and Response.

Body-Parser is attached to the request side.

Models:

    - Models represent collections in MongoDB.

    - User Model to represent a collection of Users.

    - Ninja Model to represent a collection of Ninjas.

Schema:

    - It is define the structure of our data objects

    {
        name: String,
        rank: String,
        availability: Boolean
    }

Mongoose:

    - Adds a layer of methods to easily save, edit, retrieve and delete data from mongodb.

    - Allows us to create our Models and Schemas easily.
    